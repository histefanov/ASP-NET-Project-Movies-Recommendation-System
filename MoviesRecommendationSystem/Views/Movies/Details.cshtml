@model MovieDetailsServiceModel

<div class="row movie-data">
    <div class="col-12 col-md-8">
        <iframe type="text/html" width="100%" height="100%" src="https://www.youtube.com/embed/@Model.YoutubeTrailerId" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
    <div class="col-4">
        <p class="data-genres">
            @foreach (var genre in Model.Genres)
            {
                <span>@genre.ToUpper()</span>
            }
        </p>
        <p>
            <span id="movie-title">@Model.Title</span>
            <span id="release-year">, @Model.ReleaseYear</span>
        </p>
        <p class="data-plot">
            @Model.Plot
        </p>
        <span class="imdbRatingPlugin" data-title="tt1156398" data-style="p4">
            <a href="https://www.imdb.com/title/tt1156398/?ref_=plg_rt_1">
                <img width="37" height="17" src="https://www.nicepng.com/png/full/36-360403_8f068a-internet-movie-database.png" alt="@Model.Title (@Model.ReleaseYear) on IMDb" />
            </a>
        </span>
        <div class="watch-buttons">
            <form class="d-inline-block" action="@Model.PlaybackUrl">
                <input class="btn-watch" type="submit" value="Watch now" id="watch-now" />
            </form>
            @if (User.Identity.IsAuthenticated)
            {
                if (!ViewBag.MovieIsInWatchlist)
                {
                    <input class="btn-watch" type="button" value="Watch later" id="add-movie">
                    <input class="btn-watch" type="button" value="Remove from watchlist" id="remove-movie" style="display: none">
                }
                else
                {
                    <input class="btn-watch" type="button" value="Watch later" id="add-movie" style="display: none">
                    <input class="btn-watch" type="button" value="Remove from watchlist" id="remove-movie">
                }
            }
            else
            {
                <a class="btn-watch" id="btn-watch-later" asp-area="Identity" asp-page="/Account/Login">Watch later</a>
            }
            <div id="watchlist-notification" style="display: none;">
            </div>
        </div>
        <script>(function (d, s, id) { var js, stags = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) { return; } js = d.createElement(s); js.id = id; js.src = "https://ia.media-imdb.com/images/G/01/imdb/plugins/rating/js/rating.js"; stags.parentNode.insertBefore(js, stags); })(document, "script", "imdb-rating-api");</script>
    </div>
</div>
<div class="average-rating">
    @for (int i = 0; i < Model.AverageRating; i++)
    {
        <span class="star-active">★</span>
    }
    @for (int i = 0; i < 5 - Model.AverageRating; i++)
    {
        <span class="star-passive">☆</span>
    }
</div>
<div class="div-movie-info">
    <p class="movie-info">
        <span>@Model.Studio</span> presents a <span>@Model.ReleaseYear</span> film by <span>@Model.DirectorName</span><br />
        starring <span>@Model.StarringActors</span><br />
        runtime <span>@Model.Runtime min</span> language <span>@Model.Language</span>
    </p>
</div>

<div class="reviews">
    @if (User.Identity.IsAuthenticated)
    {
        @if (Model.Reviews == null || !Model.Reviews.Any(r => r.UserId == User.GetId()))
        {
            <div>
                <p>
                    Have you already watched this movie?
                    Give us your thoughts!
                </p>
                <input type="button" value="Add review" id="add-review">
            </div>
            <div class="review-form">
                <partial name="_ReviewFormPartial" model="@Model.ReviewFormModel" />                
            </div>
        }
    }
    else
    {
        <div>
            <p>
                Have you already watched this movie?
                Give us your thoughts!
            </p>
            <a class="btn-transparent" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Movies", new { id = Model.Id, info = Model.GetInfo() })">Add review</a>
        </div>
    }
    @if (Model.Reviews != null)
    {
        <div>
            @foreach (var review in Model.Reviews)
            {
                <div class="row p-4">
                    <div class="col-2">
                        <p class="review-author">@review.Author</p>
                        <p class="review-publish-date">@review.DateCreated</p>
                        
                    </div>
                    <div class="col-4">
                        <p class="review-rating">
                            @for (int i = 0; i < review.Rating; i++)
                            {
                                <span class="star-active-small">★</span>
                            }
                            @for (int i = 0; i < 5 - review.Rating; i++)
                            {
                                <span class="star-passive-small">☆</span>
                            }
                        </p>
                        <p class="review-content">@review.Content</p>
                        @if (User.Identity.IsAuthenticated && (User.IsAdmin() || review.UserId == User.GetId()))
                        {
                            <a class="btn-transparent" asp-controller="Reviews" asp-action="Delete" asp-route-id="@review.Id" asp-route-movieId="@Model.Id">Delete</a>
                        }
                    </div>
                </div>
                <hr />
            }
        </div>
    }
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            $('#add-movie').click(function () {
                $.ajax({
                    url: '@Url.Action("Add", "Watchlists", new { movieId = Model.Id })',
                    complete: function () {
                        $('#add-movie').fadeOut(400, function () {
                            $('#remove-movie').fadeIn(150);
                        });

                        $('#watchlist-counter').html(parseInt($('#watchlist-counter').html(), 10) + 1);

                        $('#watchlist-dropdown').prepend('<a class="dropdown-item" href="@Model.Id" id="movie-id-@Model.Id">@Model.Title (@Model.ReleaseYear)</a>');

                        if ($('#watchlist-dropdown').children().length > 5) {
                            $('#watchlist-dropdown').children().last().remove();
                        }

                        $('#watchlist-notification')
                            .css('color', 'darkgreen')
                            .text('✓ Successfully added @Model.Title (@Model.ReleaseYear) to your watchlist!')
                            .fadeIn(300);
                    }
                })
            });

            $('#remove-movie').click(function () {
                $.ajax({
                    url: '@Url.Action("Remove", "Watchlists", new { movieId = Model.Id })',
                    complete: function () {
                        $('#remove-movie').fadeOut(400, function () {
                            $('#add-movie').fadeIn(150);
                        });

                        $('#watchlist-counter').html(parseInt($('#watchlist-counter').html(), 10) - 1);

                        $('#watchlist-dropdown > #movie-id-@Model.Id').remove();

                        $('#watchlist-notification')
                            .css('color', 'darkred')
                            .text('✓ Successfully removed @Model.Title (@Model.ReleaseYear) from your watchlist!')
                            .fadeIn(300);
                    }
                })
            })
        });

        $('#add-review').click(function () {
            $('.review-form').show(300);
            $('#add-review').hide();
        })
    </script>
}
