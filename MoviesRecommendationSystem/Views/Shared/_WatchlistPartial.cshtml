@using MoviesRecommendationSystem.Services.Watchlists.Models;

@inject SignInManager<User> SignInManager
@inject IWatchlistService WatchlistService

@{
    IEnumerable<WatchlistMovieServiceModel> watchlistMovies;
    int watchlistCount;
    bool userIsAuthenticated = User.Identity.IsAuthenticated;
    var userId = User.GetId();

    if (userIsAuthenticated)
    {
        watchlistMovies = WatchlistService.GetMoviesByUser(userId);
        watchlistCount = watchlistMovies.Count();
    }
    else
    {
        watchlistMovies = null;
        watchlistCount = 0;
    }
}

<div class="dropdown show">
    <a href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <img src="~/img/watchlist_icon.png" alt="Watchlist" />
        <span class="badge badge-danger" id="watchlist-counter">@watchlistCount</span>
    </a>
    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
        @if (userIsAuthenticated)
        {
            <div id="watchlist-dropdown">
                @foreach (var movie in watchlistMovies.Take(5))
                {
                    <a class="dropdown-item" asp-controller="Movies" asp-action="Details" asp-route-id="@movie.Id" id="@movie.Id">@movie.Title (@movie.ReleaseYear)</a>
                }
            </div>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" asp-controller="Watchlists" asp-action="All" asp-route-userId="@userId">See all</a>
        }
    </div>
</div>
